#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LKSN2018
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LKSN2018")]
	public partial class DBLKSN2018DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMsEmployee(MsEmployee instance);
    partial void UpdateMsEmployee(MsEmployee instance);
    partial void DeleteMsEmployee(MsEmployee instance);
    partial void InsertOrderHeader(OrderHeader instance);
    partial void UpdateOrderHeader(OrderHeader instance);
    partial void DeleteOrderHeader(OrderHeader instance);
    partial void InsertMsMember(MsMember instance);
    partial void UpdateMsMember(MsMember instance);
    partial void DeleteMsMember(MsMember instance);
    partial void InsertMsMenu(MsMenu instance);
    partial void UpdateMsMenu(MsMenu instance);
    partial void DeleteMsMenu(MsMenu instance);
    partial void InsertorderDetail(orderDetail instance);
    partial void UpdateorderDetail(orderDetail instance);
    partial void DeleteorderDetail(orderDetail instance);
    #endregion
		
		public DBLKSN2018DataContext() : 
				base(global::LKSN2018.Properties.Settings.Default.LKSN2018ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBLKSN2018DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLKSN2018DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLKSN2018DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBLKSN2018DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MsEmployee> MsEmployees
		{
			get
			{
				return this.GetTable<MsEmployee>();
			}
		}
		
		public System.Data.Linq.Table<OrderHeader> OrderHeaders
		{
			get
			{
				return this.GetTable<OrderHeader>();
			}
		}
		
		public System.Data.Linq.Table<MsMember> MsMembers
		{
			get
			{
				return this.GetTable<MsMember>();
			}
		}
		
		public System.Data.Linq.Table<MsMenu> MsMenus
		{
			get
			{
				return this.GetTable<MsMenu>();
			}
		}
		
		public System.Data.Linq.Table<orderDetail> orderDetails
		{
			get
			{
				return this.GetTable<orderDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MsEmployee")]
	public partial class MsEmployee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private string _Handphone;
		
		private string _Position;
		
		private EntitySet<OrderHeader> _OrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHandphoneChanging(string value);
    partial void OnHandphoneChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public MsEmployee()
		{
			this._OrderHeaders = new EntitySet<OrderHeader>(new Action<OrderHeader>(this.attach_OrderHeaders), new Action<OrderHeader>(this.detach_OrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handphone", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Handphone
		{
			get
			{
				return this._Handphone;
			}
			set
			{
				if ((this._Handphone != value))
				{
					this.OnHandphoneChanging(value);
					this.SendPropertyChanging();
					this._Handphone = value;
					this.SendPropertyChanged("Handphone");
					this.OnHandphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsEmployee_OrderHeader", Storage="_OrderHeaders", ThisKey="Id", OtherKey="Employeeid")]
		public EntitySet<OrderHeader> OrderHeaders
		{
			get
			{
				return this._OrderHeaders;
			}
			set
			{
				this._OrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderHeaders(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.MsEmployee = this;
		}
		
		private void detach_OrderHeaders(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.MsEmployee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderHeader")]
	public partial class OrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Employeeid;
		
		private System.Nullable<int> _Memberid;
		
		private System.DateTime _Date;
		
		private string _PaymentType;
		
		private string _CardNumber;
		
		private string _Bank;
		
		private EntitySet<orderDetail> _orderDetails;
		
		private EntityRef<MsEmployee> _MsEmployee;
		
		private EntityRef<MsMember> _MsMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmployeeidChanging(string value);
    partial void OnEmployeeidChanged();
    partial void OnMemberidChanging(System.Nullable<int> value);
    partial void OnMemberidChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    #endregion
		
		public OrderHeader()
		{
			this._orderDetails = new EntitySet<orderDetail>(new Action<orderDetail>(this.attach_orderDetails), new Action<orderDetail>(this.detach_orderDetails));
			this._MsEmployee = default(EntityRef<MsEmployee>);
			this._MsMember = default(EntityRef<MsMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Char(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employeeid", DbType="Char(6)")]
		public string Employeeid
		{
			get
			{
				return this._Employeeid;
			}
			set
			{
				if ((this._Employeeid != value))
				{
					if (this._MsEmployee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeidChanging(value);
					this.SendPropertyChanging();
					this._Employeeid = value;
					this.SendPropertyChanged("Employeeid");
					this.OnEmployeeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memberid", DbType="Int")]
		public System.Nullable<int> Memberid
		{
			get
			{
				return this._Memberid;
			}
			set
			{
				if ((this._Memberid != value))
				{
					if (this._MsMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberidChanging(value);
					this.SendPropertyChanging();
					this._Memberid = value;
					this.SendPropertyChanged("Memberid");
					this.OnMemberidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(20)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="VarChar(16)")]
		public string CardNumber
		{
			get
			{
				return this._CardNumber;
			}
			set
			{
				if ((this._CardNumber != value))
				{
					this.OnCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CardNumber = value;
					this.SendPropertyChanged("CardNumber");
					this.OnCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50)")]
		public string Bank
		{
			get
			{
				return this._Bank;
			}
			set
			{
				if ((this._Bank != value))
				{
					this.OnBankChanging(value);
					this.SendPropertyChanging();
					this._Bank = value;
					this.SendPropertyChanged("Bank");
					this.OnBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderHeader_orderDetail", Storage="_orderDetails", ThisKey="Id", OtherKey="Orderid")]
		public EntitySet<orderDetail> orderDetails
		{
			get
			{
				return this._orderDetails;
			}
			set
			{
				this._orderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsEmployee_OrderHeader", Storage="_MsEmployee", ThisKey="Employeeid", OtherKey="Id", IsForeignKey=true)]
		public MsEmployee MsEmployee
		{
			get
			{
				return this._MsEmployee.Entity;
			}
			set
			{
				MsEmployee previousValue = this._MsEmployee.Entity;
				if (((previousValue != value) 
							|| (this._MsEmployee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MsEmployee.Entity = null;
						previousValue.OrderHeaders.Remove(this);
					}
					this._MsEmployee.Entity = value;
					if ((value != null))
					{
						value.OrderHeaders.Add(this);
						this._Employeeid = value.Id;
					}
					else
					{
						this._Employeeid = default(string);
					}
					this.SendPropertyChanged("MsEmployee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsMember_OrderHeader", Storage="_MsMember", ThisKey="Memberid", OtherKey="Id", IsForeignKey=true)]
		public MsMember MsMember
		{
			get
			{
				return this._MsMember.Entity;
			}
			set
			{
				MsMember previousValue = this._MsMember.Entity;
				if (((previousValue != value) 
							|| (this._MsMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MsMember.Entity = null;
						previousValue.OrderHeaders.Remove(this);
					}
					this._MsMember.Entity = value;
					if ((value != null))
					{
						value.OrderHeaders.Add(this);
						this._Memberid = value.Id;
					}
					else
					{
						this._Memberid = default(Nullable<int>);
					}
					this.SendPropertyChanged("MsMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderDetails(orderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderHeader = this;
		}
		
		private void detach_orderDetails(orderDetail entity)
		{
			this.SendPropertyChanging();
			entity.OrderHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MsMember")]
	public partial class MsMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Handphone;
		
		private System.DateTime _JoinDate;
		
		private EntitySet<OrderHeader> _OrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHandphoneChanging(string value);
    partial void OnHandphoneChanged();
    partial void OnJoinDateChanging(System.DateTime value);
    partial void OnJoinDateChanged();
    #endregion
		
		public MsMember()
		{
			this._OrderHeaders = new EntitySet<OrderHeader>(new Action<OrderHeader>(this.attach_OrderHeaders), new Action<OrderHeader>(this.detach_OrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handphone", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string Handphone
		{
			get
			{
				return this._Handphone;
			}
			set
			{
				if ((this._Handphone != value))
				{
					this.OnHandphoneChanging(value);
					this.SendPropertyChanging();
					this._Handphone = value;
					this.SendPropertyChanged("Handphone");
					this.OnHandphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="Date NOT NULL")]
		public System.DateTime JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsMember_OrderHeader", Storage="_OrderHeaders", ThisKey="Id", OtherKey="Memberid")]
		public EntitySet<OrderHeader> OrderHeaders
		{
			get
			{
				return this._OrderHeaders;
			}
			set
			{
				this._OrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderHeaders(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.MsMember = this;
		}
		
		private void detach_OrderHeaders(OrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.MsMember = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MsMenu")]
	public partial class MsMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private int _Price;
		
		private int _Carbo;
		
		private int _Protein;
		
		private EntitySet<orderDetail> _orderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnCarboChanging(int value);
    partial void OnCarboChanged();
    partial void OnProteinChanging(int value);
    partial void OnProteinChanged();
    #endregion
		
		public MsMenu()
		{
			this._orderDetails = new EntitySet<orderDetail>(new Action<orderDetail>(this.attach_orderDetails), new Action<orderDetail>(this.detach_orderDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carbo", DbType="Int NOT NULL")]
		public int Carbo
		{
			get
			{
				return this._Carbo;
			}
			set
			{
				if ((this._Carbo != value))
				{
					this.OnCarboChanging(value);
					this.SendPropertyChanging();
					this._Carbo = value;
					this.SendPropertyChanged("Carbo");
					this.OnCarboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Protein", DbType="Int NOT NULL")]
		public int Protein
		{
			get
			{
				return this._Protein;
			}
			set
			{
				if ((this._Protein != value))
				{
					this.OnProteinChanging(value);
					this.SendPropertyChanging();
					this._Protein = value;
					this.SendPropertyChanged("Protein");
					this.OnProteinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsMenu_orderDetail", Storage="_orderDetails", ThisKey="id", OtherKey="Menuid")]
		public EntitySet<orderDetail> orderDetails
		{
			get
			{
				return this._orderDetails;
			}
			set
			{
				this._orderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orderDetails(orderDetail entity)
		{
			this.SendPropertyChanging();
			entity.MsMenu = this;
		}
		
		private void detach_orderDetails(orderDetail entity)
		{
			this.SendPropertyChanging();
			entity.MsMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderDetail")]
	public partial class orderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Orderid;
		
		private System.Nullable<int> _Menuid;
		
		private int _Qty;
		
		private string _Status;
		
		private EntityRef<MsMenu> _MsMenu;
		
		private EntityRef<OrderHeader> _OrderHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrderidChanging(string value);
    partial void OnOrderidChanged();
    partial void OnMenuidChanging(System.Nullable<int> value);
    partial void OnMenuidChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public orderDetail()
		{
			this._MsMenu = default(EntityRef<MsMenu>);
			this._OrderHeader = default(EntityRef<OrderHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orderid", DbType="Char(12)")]
		public string Orderid
		{
			get
			{
				return this._Orderid;
			}
			set
			{
				if ((this._Orderid != value))
				{
					if (this._OrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderidChanging(value);
					this.SendPropertyChanging();
					this._Orderid = value;
					this.SendPropertyChanged("Orderid");
					this.OnOrderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Menuid", DbType="Int")]
		public System.Nullable<int> Menuid
		{
			get
			{
				return this._Menuid;
			}
			set
			{
				if ((this._Menuid != value))
				{
					if (this._MsMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuidChanging(value);
					this.SendPropertyChanging();
					this._Menuid = value;
					this.SendPropertyChanged("Menuid");
					this.OnMenuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MsMenu_orderDetail", Storage="_MsMenu", ThisKey="Menuid", OtherKey="id", IsForeignKey=true)]
		public MsMenu MsMenu
		{
			get
			{
				return this._MsMenu.Entity;
			}
			set
			{
				MsMenu previousValue = this._MsMenu.Entity;
				if (((previousValue != value) 
							|| (this._MsMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MsMenu.Entity = null;
						previousValue.orderDetails.Remove(this);
					}
					this._MsMenu.Entity = value;
					if ((value != null))
					{
						value.orderDetails.Add(this);
						this._Menuid = value.id;
					}
					else
					{
						this._Menuid = default(Nullable<int>);
					}
					this.SendPropertyChanged("MsMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderHeader_orderDetail", Storage="_OrderHeader", ThisKey="Orderid", OtherKey="Id", IsForeignKey=true)]
		public OrderHeader OrderHeader
		{
			get
			{
				return this._OrderHeader.Entity;
			}
			set
			{
				OrderHeader previousValue = this._OrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._OrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderHeader.Entity = null;
						previousValue.orderDetails.Remove(this);
					}
					this._OrderHeader.Entity = value;
					if ((value != null))
					{
						value.orderDetails.Add(this);
						this._Orderid = value.Id;
					}
					else
					{
						this._Orderid = default(string);
					}
					this.SendPropertyChanged("OrderHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
